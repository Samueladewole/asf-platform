job(type: Maven) {
    name "asf-demo-dev-build-review"
    jdk("/usr/lib/jvm/java/")
    parameters {
        stringParam("GERRIT_PROJECT", "<%= @project_name %>", "Gerrit project name")
        stringParam("GERRIT_BRANCH", "dev", "Gerrit branch")
        stringParam("GERRIT_REFSPEC", "refs/heads/dev", "Gerrit refspec")
    }
    wrappers {
        toolenv("Maven 3.1", "Git")
    }
    configure { project ->
	    project << globalSettings(class:'org.jenkinsci.plugins.configfiles.maven.job.MvnGlobalSettingsProvider', plugin:'config-file-provider@<%= @cfg_plugin_version %>') {
		    settingsConfigId('<%= @settings_id %>')
		}
    }
    scm {
        git {
            remote {
                name("origin")
                url("ssh://jenkins@<%= @gerrit_host %>:<%= @gerrit_port %>/<%= @project_name %>")
                refspec("\${GERRIT_REFSPEC}")
            }
            branch("*/\${GERRIT_BRANCH}")
        }
    }
    triggers {
        gerrit {
            events {
                PatchsetCreated
                DraftPublished
            }
            project("<%= @project_name %>", "dev")
        }
    }
    goals("-e")
    goals("clean")
    goals("install")
    goals("-DfailIfNoTests=false")
    perModuleEmail(false)
    mavenInstallation("Maven 3.1")
}

job(type: Maven) {
    name "asf-demo-dev-build"
    jdk("/usr/lib/jvm/java/")
    wrappers {
        toolenv("Maven 3.1.1")
    }
    configure { project ->
	    project << globalSettings(class:'org.jenkinsci.plugins.configfiles.maven.job.MvnGlobalSettingsProvider', plugin:'config-file-provider@<%= @cfg_plugin_version %>') {
		    settingsConfigId('<%= @settings_id %>')
		}
    }
    scm {
        git {
            remote {
                name("origin")
                url("ssh://jenkins@<%= @gerrit_host %>:<%= @gerrit_port %>/<%= @project_name %>")
                refspec("+refs/heads/dev:refs/remotes/origin/dev")
            }
            branch("*/dev")
        }
    }
    triggers {
        gerrit {
            events {
                RefUpdated
            }
            project("<%= @project_name %>", "plain:dev")
        }
    }

    goals("-e")
    goals("clean")
    goals("install")
    goals("-DfailIfNoTests=false")
    mavenInstallation("Maven-default")

    postBuildSteps {
        maven {
            goals("""deploy:deploy-file -B
                -DgroupId=org.springframework.samples
                -DartifactId=asf-webapp-demo
                -Dversion=1.0-SNAPSHOT
                -Dpackaging=war
                -Dfile=\${WORKSPACE}/target/petclinic.war
                -Durl=<%= @nexus_url %>/content/repositories/builds""")
            mavenInstallation("Maven-default")
	    configure { project ->
		    project << globalSettings(class:'org.jenkinsci.plugins.configfiles.maven.job.MvnGlobalSettingsProvider', plugin:'config-file-provider@<%= @cfg_plugin_version %>') {
			    settingsConfigId('<%= @settings_id %>')
			}
	    }
        }
    }
}
