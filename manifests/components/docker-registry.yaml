# Encoding: utf-8
#
# Application: Agile Software Factory
# Component: Docker Registry
#
# Copyright (c) 2015 Grid Dynamics International, Inc. All Rights Reserved
# Classification level: Public
# Licensed under the Apache License, Version 2.0.
#

application:
  configuration:
    input.storage_size: 20
    input.cookbooks_url: "http://gd-asf.s3.amazonaws.com/cookbooks.tar.gz"
  interfaces:
    input:
      "*": "bind(workflow#input.*)"
    result:
      "*": "bind(workflow#result.*)"
  components:
    workflow:
      type: workflow.Instance
      interfaces:
        input:
          storage_size:
            type: "configuration(int)"
            name: "Storage size"
          cookbooks_url:
            type: configuration(string)
            name: Cookbooks tarball URL
        result:
          docker_registry_endpoint:
            type: "publish-signal(string)"
            name: "Docker Registry Endpoint"
          docker_registry_ip:
            type: "publish-signal(string)"
            name: "Docker Registry IP"
          docker_registry_private_ip:
            type: "publish-signal(string)"
            name: "Docker Registry Private IP"
      configuration:
        configuration.triggers: {}
        configuration.workflows:
          launch:
            steps:
              - provision:
                  action: provisionVms
                  parameters:
                    roleName: docker-registry
                    hardwareId: m1.small
                    quantity: 1
                    retryCount: 1
                    jcloudsProvider: aws-ec2
                    jcloudsEndpoint: https://ec2.us-east-1.amazonaws.com
                    jcloudsRegions: us-east-1
                    jcloudsNodeNamePrefix: docker-registry
                    vmIdentity: root
                    imageId: us-east-1/ami-05ebd06c
                    ec2SecurityGroup: default
                    providerSettings:
                      userData: |
                        #cloud-config
                        coreos:
                          units:
                            - name: docker-tcp.socket
                              command: start
                              enable: true
                              content: |
                                [Unit]
                                Description=Docker Socket for the API
                                [Socket]
                                ListenStream=2375
                                BindIPv6Only=both
                                Service=docker.service
                                [Install]
                                WantedBy=sockets.target
                    blockDeviceMapping:
                      "/dev/sda1":
                        ebs:
                          volumeSize: "{$.storage_size}"
                  output:
                    docker_registry_ip: ips
                    docker_registry_private_ip: privateips

              - install_registry:
                  precedingPhases: [ "provision" ]
                  action: chefsolo
                  parameters:
                    roles: [ "docker-registry" ]
                    recipeUrl: "{$.cookbooks_url}"
                    version: "11.16.4"
                    runList: [ "recipe[cicd_infrastructure::docker_registry]" ]
                    jattrs:
                      docker:
                        registry:
                          repository: "/mnt/ephemeral/registry"

              - check_registry:
                  action: execrun
                  precedingPhases: [ "install_registry" ]
                  parameters:
                    roles: [ "docker-registry" ]
                    command:
                      - |
                          sleep 30
                          if [ $$(curl -w %{{http_code}} -s -o /dev/null http://{$.docker_registry_private_ip[0]}:5000/v1/_ping) != 200 ]; then
                            exit 1
                          fi
            return:
              docker_registry_ip:
                value: "{$.docker_registry_ip[0]}"
              docker_registry_private_ip:
                value: "{$.docker_registry_private_ip[0]}"
              docker_registry_endpoint:
                value: "http://{$.docker_registry_private_ip[0]}:5000"

          destroy:
            steps:
                - destroy:
                    action: undeployEnv
